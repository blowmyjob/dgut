<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.common.mapper.WorkDao" >
    <select id="getProcessByUserId" resultType="com.example.common.entity.WorkProcess">
        select * from Workprocess where userid = #{id} and state = #{state} and visable = 'true'
    </select>

    <update id="updateProcess">
        update Workprocess
            <set>
                <if test="state != null">
                   state = #{state},
                </if>
                <if test="roomId != null">
                   roomid = #{roomId}
                </if>
            </set>
         where id = #{id}
    </update>

    <insert id="insertProcess">
        insert into Workprocess (userid,state,jobid,resumeid) values(#{userid},'待查看',#{jobid},#{resumeid})
    </insert>

    <delete id="delProcess">
        delete from Workprocess where id = #{id}
    </delete>

    <select id="getProcessByIdAndState" resultType="com.example.common.entity.WorkProcess">
        select * from Workprocess where id = #{id} and state = #{state}
    </select>

    <select id="getWorkDetails" resultType="com.example.common.vo.WorkDetail">
        select DISTINCT Workprocess.id as id,userid,jobid,state,User.username as name,Hire.description,companyname,Hire.description as jobdescription,updatetime,Resume.address as address,Workprocess.resumeid as resumeid
        from Company,Workprocess ,User,Hire,Resume
        where Company.id=Workprocess.Companyid and Workprocess.userid=#{userid} and Workprocess.state=#{state} and Hire.companyid=Workprocess.companyid and User.id = Workprocess.userid and Resume.id = Workprocess.resumeid
    </select>

    <select id="getProcessByCompanyId" resultType="com.example.common.vo.WorkDetail">
        select Workprocess.id as id,Workprocess.userid,state,User.username as name,jobid,Hire.workname as jobname,Hire.companyid,updatetime,Hire.description,Resume.address AS address,Workprocess.resumeid AS resumeid
        from Workprocess,User,Hire,Resume
        where User.id = Workprocess.userid and Hire.id = Workprocess.jobid and Workprocess.companyid=#{companyid} and state=#{state} and Resume.id = Workprocess.resumeid
    </select>

    <select id="findCompanyIdByUserId" resultType="java.lang.Integer">
        select companyid from Employee_Relationship where userid = #{userid}
    </select>

    <update id="updateState">
        update Workprocess set visable = #{state} where id = #{id}
    </update>

    <insert id="insertJob" parameterType="com.example.common.entity.Hire">
        insert into Hire (workname,description,hirecount,companyid,createtime,endtime) values(#{workname},#{description},#{hirecount},#{companyid},now(),#{endtime})
    </insert>

    <select id="selectAllJob" resultType="com.example.common.entity.Hire">
        select * from Hire limit 0,6
    </select>

    <select id="searchJob" resultType="com.example.common.entity.Hire">
        select * from Hire
        <where>
            <if test="keyword != null">
                 workname like '%${keyword}%'
            </if>
            <if test="location != null">
                AND location = #{location}
            </if>
            <if test="category != null">
                AND category = #{category}
            </if>
            <if test="id != null">
                AND id = #{id}
            </if>
        </where>
        order by endtime limit 0 , 7
    </select>

    <select id="getCatesByCategory" resultType="com.example.common.vo.Category">
        select count(*) as count,category from Hire
        <where>
            <if test="keyword != null">
                workname like '%${keyword}%'
            </if>
            <if test="location != null">
                AND location = #{location}
            </if>
            <if test="category != null">
                AND category = #{category}
            </if>
        </where>
        group by category
    </select>

    <select id="getCatesByLocation" resultType="com.example.common.vo.Category">
        select count(*) as count,location from Hire
        <where>
            <if test="keyword != null">
                workname like '%${keyword}%'
            </if>
            <if test="location != null">
                AND location = #{location}
            </if>
            <if test="category != null">
                AND category = #{category}
            </if>
        </where>
        group by location limit 0 , 7
    </select>

    <select id="getJobLastWeek" resultType="java.lang.Integer">
        select count(*) from Hire where YEARWEEK(date_format(createtime,'%Y-%m-%d')) = YEARWEEK(now())-1
    </select>
</mapper>