<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.common.mapper.UserDao" >
    <select id="getUsers" resultType="com.example.common.entity.User">
        select * from User
    </select>

    <select id="getUser" resultType="com.example.common.entity.User">
        select * from User where id = #{id}
    </select>

    <select id="getUserByName" resultType="com.example.common.entity.User">
        select * from User where userName = #{userName}
    </select>

    <select id="findPasswd" resultType="java.lang.String">
        select password from User where username = #{userName}
    </select>

    <delete id="deleteUser">
        delete from User where id = #{id}
    </delete>

    <update id="updateUser" parameterType="com.example.common.entity.User">
        update User
          <set>
              <if test="username != null">username = #{username}, </if>
              <if test="sex != null">sex = #{sex} </if>
              <if test="available != null">available = #{available}</if>
              <if test="isdel != null">isdel = #{isdel}</if>
          </set>
        where id= #{id}
    </update>

    <update id="updatePasswd">
        update User
         <set>
           <if test="password != null">password = #{password}</if>
        </set>
         where username = #{username} and password = #{oldpassword}
    </update>

    <insert id="addUser">
        insert into User (username,password,sex,identify,available)
        values(#{username},#{password},#{sex},#{identify},'false')
    </insert>

    <delete id="deleteResume">
        delete from  Resume where id = #{id}
    </delete>

    <select id="getResumes" resultType="com.example.common.entity.Resume">
        select * from Resume where userName = #{userName}
    </select>

    <insert id="addResume">
        insert into Resume (fileName,address,userName) values (#{fileName},#{address},#{userName})
    </insert>

    <update id="checkUser">
        update User set available = 'true' where id = #{id}
    </update>

    <update id="stopUser">
        update User set available = 'false' where id = #{id}
    </update>

    <select id="getManagers" resultType="com.example.common.entity.User">
        select * from User where identify = 'ADMIN'
    </select>

    <select id="selectUserByType" resultType="com.example.common.entity.User">
        select *  from User
        <where>
            <if test="id != null">
                id = #{id}
            </if>
            <if test="username != null">
                and username = #{username}
            </if>
            <if test="sex != null">
                and sex = #{sex}
            </if>
            <if test="identify != null">
               and identity = #{identity}
            </if>
            <if test="available != null">
                and available = #{available}
            </if>
            <if test="isdel != null"></if>
                and isdel = #{isdel}
        </where>
    </select>

    <delete id="delUsers" parameterType="list">
        delete from User where id in
        <foreach collection="list" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

    <select id="getUserByRole" resultType="com.example.common.entity.User">
        select * from User a,User_Role b from a.id = b.userid and b.roleid=#{roleid}
    </select>
</mapper>